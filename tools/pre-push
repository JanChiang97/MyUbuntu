#!/bin/bash

# An example hook script to verify what is about to be pushed.  Called by "git
# push" after it has checked the remote status, but before anything has been
# pushed.  If this script exits with a non-zero status nothing will be pushed.
#
# This hook is called with the following parameters:
#
# $1 -- Name of the remote to which the push is being done
# $2 -- URL to which the push is being done
#
# If pushing without using a named remote those arguments will be equal.
#
# Information about the commits which are being pushed is supplied as lines to
# the standard input in the form:
#
#   <local ref> <local sha1> <remote ref> <remote sha1>
#
# This sample shows how to prevent push of commits where the log message starts
# with "WIP" (work in progress).

remote="$1"
url="$2"

z40=0000000000000000000000000000000000000000

github=`git remote -v`
usr=`whoami`


if [[ $usr == "Jan" || $usr == "jan" ]]; then
	echo "管理员登录，自动同步..."
else
	exit 0
fi

if [[ $github != *"github"* ]];then
	git remote add github https://github.com/JanChiang97/MyUbuntu.git  #>/dev/null 2>&1
	git fetch github #>/dev/null 2>&1
fi

if [[ $remote != "github" ]]; then
	git push github HEAD:master -f #>/dev/null 2>&1
	git push github HEAD:v1.0.0 -f #>/dev/null 2>&1
fi

exit 0
